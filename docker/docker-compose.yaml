version: '3.9'

configs:
  db_init:
    file: ./postgres/db_init.sql

services:
  postgres_kafka:
    container_name: postgres_kafka
    image: docker.io/timescale/timescaledb:latest-pg16
    environment:
      POSTGRES_DB: admin
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      start_period: 5s
    volumes:
      - postgres_kafka:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    command: [ "postgres", "-c", "log_statement=all" ]
    configs:
      - source: db_init
        target: /docker-entrypoint-initdb.d/db_init.sql

  kafka-broker:
    image: bitnami/kafka:latest
    hostname: kafka-broker
    container_name: kafka-broker
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://kafka-broker:9092,CONTROLLER://:2181,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@127.0.0.1:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_NODE_ID: 1
      KAFKA_KRAFT_CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk


  messaging:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    container_name: messaging
    pull_policy: always
    depends_on:
      - kafka-broker
    ports:
      - "8081:8081"
volumes:
  postgres_kafka: